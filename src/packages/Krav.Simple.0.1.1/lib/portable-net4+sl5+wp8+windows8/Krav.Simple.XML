<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Krav.Simple</name>
    </assembly>
    <members>
        <member name="T:Krav.StringExtensions">
            <summary>
            Extension methods for <see cref="T:System.String"/>
            </summary>
        </member>
        <member name="M:Krav.StringExtensions.Inject(System.String,System.Object[])">
            <summary>
            Injects the provided arguments into the string using <see cref="M:System.String.Format"/> rules.
            </summary>
            <param name="format">The string to inject arguments into</param>
            <param name="args">The arguments to inject.</param>
            <returns>The resulting <see cref="T:System.String"/> after injecting the arguments.</returns>
        </member>
        <member name="M:Krav.StringExtensions.Any(System.String,System.Func{System.Char,System.Boolean})">
            <summary>
            Implementation of Any for strings
            </summary>
            <param name="source">The string</param>
            <param name="predicate">The predicate</param>
            <returns>true if any of the characters in the string satisfies the predicate; otherwise false</returns>
        </member>
        <member name="T:Krav.RequireThat">
            <summary>
            A set of requirement methods to use when verifying that arguments meet specific requirements.
            </summary>
        </member>
        <member name="M:Krav.RequireThat.ThisHolds(System.Boolean,System.String)">
            <summary>
            
            </summary>
            <param name="condition">The condition to verify.</param>
            <param name="message">Exception message to use if the requirement fails.</param>
            <exception cref="T:System.ArgumentException">Thrown if the requirement is not met.</exception>
        </member>
        <member name="M:Krav.RequireThat.NotNull``1(``0,System.String)">
            <summary>
              Requires that <paramref name="value"/> is not null. Throws an exception if the requirement fails.
            </summary>
            <typeparam name="T">The <see cref="T:System.Type"/> of <paramref name="value"/>.</typeparam>
            <param name="value">The value to verify.</param>
            <param name="name">The name of the value.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="value"/> is null.</exception>
        </member>
        <member name="M:Krav.RequireThat.NotNull``1(System.Nullable{``0},System.String)">
            <summary>
              Requires that <paramref name="value"/> value is not null and that it has a value. Throws an
              exception if the requirement fails.
            </summary>
            <typeparam name="T">The <see cref="T:System.Type"/> of <paramref name="value"/>.</typeparam>
            <param name="value">The value to verify.</param>
            <param name="name">The name of the value.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="value"/> is null.</exception>
        </member>
        <member name="M:Krav.RequireThat.NotNullOrEmpty(System.String,System.String)">
            <summary>
              Requires that <paramref name="value"/> is not null or an empty <see cref="T:System.String"/>.
              Throws an exception if the requirement is not met.
            </summary>
            <param name="value">The value to verify.</param>
            <param name="name">The name of the value.</param>
            <exception cref="T:System.ArgumentException">Thrown if <paramref name="value"/> is empty.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="value"/> is null.</exception>
        </member>
        <member name="M:Krav.RequireThat.NotNullOrEmpty(System.Collections.IEnumerable,System.String)">
            <summary>
              Requires that <paramref name="value"/> is not null or an empty <see cref="T:System.Collections.IEnumerable"/>.
              Throws an exception if the requirement is not met.
            </summary>
            <param name="value">The value to verify.</param>
            <param name="name">The name of the value.</param>
            <exception cref="T:System.ArgumentException">Thrown if <paramref name="value"/> is empty.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="value"/> is null.</exception>
        </member>
        <member name="M:Krav.RequireThat.NotNullOrWhitespace(System.String,System.String)">
            <summary>
              Requires that <paramref name="value"/> is not null, empty or only consisting of white-space
              characters.
              Throws an exception if the requirement is not met.
            </summary>
            <param name="value">The value to verify.</param>
            <param name="name">The name of the value.</param>
            <exception cref="T:System.ArgumentException">Thrown if <paramref name="value"/> is empty or white-space.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="value"/> is null.</exception>
        </member>
        <member name="M:Krav.RequireThat.IsNumber(System.Double,System.String)">
            <summary>
              Requires that <paramref name="value"/> is a number.
              Throws an exception if the requirement is not met.
            </summary>
            <param name="value">The value to verify.</param>
            <param name="name">The name of the value.</param>
            <exception cref="T:System.ArgumentException">Thrown if <paramref name="value"/> is not a number.</exception>
        </member>
        <member name="M:Krav.RequireThat.IsNumber(System.Single,System.String)">
            <summary>
              Requires that <paramref name="value"/> is a number.
              Throws an exception if the requirement is not met.
            </summary>
            <param name="value">The value to verify.</param>
            <param name="name">The name of the value.</param>
            <exception cref="T:System.ArgumentException">Thrown if <paramref name="value"/> is not a number.</exception>
        </member>
        <member name="M:Krav.RequireThat.IsOfType``1(System.Object,System.String)">
            <summary>
              Requires that <paramref name="value"/> is of the specified <see cref="T:System.Type"/>.
              Throws an exception if the requirement is not met.
            </summary>
            <typeparam name="T">The type that <paramref name="value"/> is required to be of.</typeparam>
            <param name="value">The value to verify.</param>
            <param name="name">The name of the value.</param>
            <exception cref="T:System.ArgumentException">Thrown if <paramref name="value"/> is not of the specified type.</exception>
        </member>
        <member name="M:Krav.RequireThat.IsOfType(System.Object,System.String,System.Type)">
            <summary>
              Requires that <paramref name="value"/> is of the specified type.
              Throws an exception if the requirement is not met.
            </summary>
            <param name="value">The value to verify.</param>
            <param name="name">The name of the value.</param>
            <param name="expectedType">The type that <paramref name="value"/> is required to be of.</param>
            <exception cref="T:System.ArgumentException">Thrown if <paramref name="value"/> is not of the specified type.</exception>
        </member>
    </members>
</doc>
